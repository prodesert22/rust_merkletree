use crate::{Contract, ContractClient, MerkleTree};
use soroban_sdk::{BytesN, Env, Vec, U256, vec};
use tiny_keccak::{Hasher, Keccak};

const ONE_EXPECTED_ROOT: [u8; 32] = [
    103, 232, 184, 92, 2, 115, 126, 8, 168, 169, 4, 142, 252, 141, 182, 26, 40, 44, 126, 173, 111,
    125, 121, 42, 113, 136, 235, 57, 9, 36, 47, 138,
];
#[test]
fn one_element_works() {
    let env = Env::default();
    let contract_id = env.register_contract(None, Contract);
    let client = ContractClient::new(&env, &contract_id);

    let mut hasher = Keccak::v256();
    let mut output: [u8; 32] = [0; 32];

    let value = U256::from_u32(&env, 1);
    let value_byte = value.to_be_bytes();
    let value_byte_array: BytesN<32> = value_byte.try_into().expect("Error");

    hasher.update(&value_byte_array.to_array());
    hasher.finalize(&mut output);

    let mut final_leaf: [u8; 32] = [0; 32];
    hasher = Keccak::v256();
    hasher.update(&output);
    hasher.finalize(&mut final_leaf);

    let leaf = BytesN::from_array(&env, &final_leaf);

    let tree = client.insert(&leaf);
    let root = client.get_root();
    let array_root = root.to_array();

    assert!(tree.count == 1, "Error in tree count");
    assert!(
        tree.branch.get_unchecked(0).eq(&leaf),
        "Error in tree branch"
    );
    assert!(array_root.eq(&ONE_EXPECTED_ROOT), "Error in tree root");
}


#[test]
#[should_panic]
fn insert_fails_tree_full(){
    let env = Env::default();
    let contract_id = env.register_contract(None, Contract);
    let client = ContractClient::new(&env, &contract_id);

    for i in 0..4294967296u64{
        let hash = MerkleTree::keccak256(vec![&env, [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, i as u8,
        ]]);
        client.insert(&BytesN::from_array(&env, &hash));
    }
}

#[test]
fn insert_fails_vec_wrong_len(){
    
}

const THREE_EXPECTED_ROOT: [u8; 32] = [
    24, 242, 241, 100, 111, 238, 51, 90, 30, 175, 81, 145, 168, 206, 88, 234, 119, 32, 128, 5, 125,
    15, 218, 104, 125, 245, 156, 69, 228, 126, 111, 104,
];
#[test]
fn three_elements_works() {
    let env = Env::default();
    let contract_id = env.register_contract(None, Contract);
    let client = ContractClient::new(&env, &contract_id);

    client.insert(&BytesN::from_array(
        &env,
        &[
            240, 254, 124, 153, 239, 35, 172, 225, 131, 83, 133, 232, 61, 214, 28, 158, 203, 97,
            146, 214, 81, 79, 204, 19, 53, 110, 249, 18, 120, 142, 170, 138,
        ],
    )); // hashed message of "one" https://docs.ethers.org/v5/api/utils/hashing/#utils-hashMessage

    client.insert(&BytesN::from_array(
        &env,
        &[
            101, 173, 107, 124, 57, 198, 135, 218, 211, 237, 192, 91, 236, 9, 48, 11, 116, 35, 99,
            245, 193, 244, 45, 181, 134, 189, 206, 64, 201, 252, 94, 239,
        ],
    )); // hashed message of "two" https://docs.ethers.org/v5/api/utils/hashing/#utils-hashMessage

    client.insert(&BytesN::from_array(
        &env,
        &[
            118, 157, 191, 5, 124, 27, 21, 68, 183, 180, 169, 164, 249, 136, 147, 202, 215, 48,
            128, 118, 74, 214, 62, 232, 51, 68, 49, 36, 148, 220, 41, 110,
        ],
    )); // hashed message of "three" https://docs.ethers.org/v5/api/utils/hashing/#utils-hashMessage

    let tree = client.get_tree();
    let root = client.get_root();
    let array_root = root.to_array();

    assert!(tree.count == 3, "Error in tree count");
    assert!(array_root.eq(&THREE_EXPECTED_ROOT), "Error in tree root");
}

#[test]
fn check_root_from_leaf() {
    let env = Env::default();

    let one = BytesN::from_array(
        &env,
        &[
            240, 254, 124, 153, 239, 35, 172, 225, 131, 83, 133, 232, 61, 214, 28, 158, 203, 97,
            146, 214, 81, 79, 204, 19, 53, 110, 249, 18, 120, 142, 170, 138,
        ],
    );

    let path = Vec::from_array(
        &env,
        [
            BytesN::from_array(
                &env,
                &[
                    101, 173, 107, 124, 57, 198, 135, 218, 211, 237, 192, 91, 236, 9, 48, 11, 116,
                    35, 99, 245, 193, 244, 45, 181, 134, 189, 206, 64, 201, 252, 94, 239,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    233, 136, 77, 235, 234, 6, 25, 162, 206, 37, 186, 59, 190, 106, 68, 56, 164,
                    43, 193, 27, 35, 8, 246, 44, 101, 237, 67, 190, 11, 67, 212, 69,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    180, 193, 25, 81, 149, 124, 111, 143, 100, 44, 74, 246, 28, 214, 178, 70, 64,
                    254, 198, 220, 127, 198, 7, 238, 130, 6, 169, 158, 146, 65, 13, 48,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    33, 221, 185, 163, 86, 129, 92, 63, 172, 16, 38, 182, 222, 197, 223, 49, 36,
                    175, 186, 219, 72, 92, 155, 165, 163, 227, 57, 138, 4, 183, 186, 133,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    229, 135, 105, 179, 42, 27, 234, 241, 234, 39, 55, 90, 68, 9, 90, 13, 31, 182,
                    100, 206, 45, 211, 88, 231, 252, 191, 183, 140, 38, 161, 147, 68,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    14, 176, 30, 191, 201, 237, 39, 80, 12, 212, 223, 201, 121, 39, 45, 31, 9, 19,
                    204, 159, 102, 84, 13, 126, 128, 5, 129, 17, 9, 225, 207, 45,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    136, 124, 34, 189, 135, 80, 211, 64, 22, 172, 60, 102, 181, 255, 16, 45, 172,
                    221, 115, 246, 176, 20, 231, 16, 181, 30, 128, 34, 175, 154, 25, 104,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    255, 215, 1, 87, 228, 128, 99, 252, 51, 201, 122, 5, 15, 127, 100, 2, 51, 191,
                    100, 108, 201, 141, 149, 36, 198, 185, 43, 207, 58, 181, 111, 131,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    152, 103, 204, 95, 127, 25, 107, 147, 186, 225, 226, 126, 99, 32, 116, 36, 69,
                    210, 144, 242, 38, 56, 39, 73, 139, 84, 254, 197, 57, 247, 86, 175,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    206, 250, 212, 229, 8, 192, 152, 185, 167, 225, 216, 254, 177, 153, 85, 251, 2,
                    186, 150, 117, 88, 80, 120, 113, 9, 105, 211, 68, 15, 80, 84, 224,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    249, 220, 62, 127, 224, 22, 224, 80, 239, 242, 96, 51, 79, 24, 165, 212, 254,
                    57, 29, 130, 9, 35, 25, 245, 150, 79, 46, 46, 183, 193, 195, 165,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    248, 177, 58, 73, 226, 130, 246, 9, 195, 23, 168, 51, 251, 141, 151, 109, 17,
                    81, 124, 87, 29, 18, 33, 162, 101, 210, 90, 247, 120, 236, 248, 146,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    52, 144, 198, 206, 235, 69, 10, 236, 220, 130, 226, 130, 147, 3, 29, 16, 199,
                    215, 59, 248, 94, 87, 191, 4, 26, 151, 54, 10, 162, 197, 217, 156,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    193, 223, 130, 217, 196, 184, 116, 19, 234, 226, 239, 4, 143, 148, 180, 211,
                    85, 76, 234, 115, 217, 43, 15, 122, 249, 110, 2, 113, 198, 145, 226, 187,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    92, 103, 173, 215, 198, 202, 243, 2, 37, 106, 222, 223, 122, 177, 20, 218, 10,
                    207, 232, 112, 212, 73, 163, 164, 137, 247, 129, 214, 89, 232, 190, 204,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    218, 123, 206, 159, 78, 134, 24, 182, 189, 47, 65, 50, 206, 121, 140, 220, 122,
                    96, 231, 225, 70, 10, 114, 153, 227, 198, 52, 42, 87, 150, 38, 210,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    39, 51, 229, 15, 82, 110, 194, 250, 25, 162, 43, 49, 232, 237, 80, 242, 60,
                    209, 253, 249, 76, 145, 84, 237, 58, 118, 9, 162, 241, 255, 152, 31,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    225, 211, 181, 200, 7, 178, 129, 228, 104, 60, 198, 214, 49, 92, 249, 91, 154,
                    222, 134, 65, 222, 252, 179, 35, 114, 241, 193, 38, 227, 152, 239, 122,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    90, 45, 206, 10, 138, 127, 104, 187, 116, 86, 15, 143, 113, 131, 124, 44, 46,
                    187, 203, 247, 255, 251, 66, 174, 24, 150, 241, 63, 124, 116, 121, 160,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    180, 106, 40, 182, 245, 85, 64, 248, 148, 68, 246, 61, 224, 55, 142, 61, 18,
                    27, 224, 158, 6, 204, 157, 237, 28, 32, 230, 88, 118, 211, 106, 160,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    198, 94, 150, 69, 100, 71, 134, 182, 32, 226, 221, 42, 214, 72, 221, 252, 191,
                    74, 126, 91, 26, 58, 78, 207, 231, 246, 70, 103, 163, 240, 183, 226,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    244, 65, 133, 136, 237, 53, 162, 69, 140, 255, 235, 57, 185, 61, 38, 241, 141,
                    42, 177, 59, 220, 230, 174, 229, 142, 123, 153, 53, 158, 194, 223, 217,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    90, 156, 22, 220, 0, 214, 239, 24, 183, 147, 58, 111, 141, 198, 92, 203, 85,
                    102, 113, 56, 119, 111, 125, 234, 16, 16, 112, 220, 135, 150, 227, 119,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    77, 248, 79, 64, 174, 12, 130, 41, 208, 214, 6, 158, 92, 143, 57, 167, 194,
                    153, 103, 122, 9, 211, 103, 252, 123, 5, 227, 188, 56, 14, 230, 82,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    205, 199, 37, 149, 247, 76, 123, 16, 67, 208, 225, 255, 186, 183, 52, 100, 140,
                    131, 141, 251, 5, 39, 217, 113, 182, 2, 188, 33, 108, 150, 25, 239,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    10, 191, 90, 201, 116, 161, 237, 87, 244, 5, 10, 165, 16, 221, 156, 116, 245,
                    8, 39, 123, 57, 215, 151, 59, 178, 223, 204, 197, 238, 176, 97, 141,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    184, 205, 116, 4, 111, 243, 55, 240, 167, 191, 44, 142, 3, 225, 15, 100, 44,
                    24, 134, 121, 141, 113, 128, 106, 177, 232, 136, 217, 229, 238, 135, 208,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    131, 140, 86, 85, 203, 33, 198, 203, 131, 49, 59, 90, 99, 17, 117, 223, 244,
                    150, 55, 114, 204, 233, 16, 129, 136, 179, 74, 200, 124, 129, 196, 30,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    102, 46, 228, 221, 45, 215, 178, 188, 112, 121, 97, 177, 230, 70, 196, 4, 118,
                    105, 220, 182, 88, 79, 13, 141, 119, 13, 175, 93, 126, 125, 235, 46,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    56, 138, 178, 14, 37, 115, 209, 113, 168, 129, 8, 231, 157, 130, 14, 152, 242,
                    108, 11, 132, 170, 139, 47, 74, 164, 150, 141, 187, 129, 142, 163, 34,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    147, 35, 124, 80, 186, 117, 238, 72, 95, 76, 34, 173, 242, 247, 65, 64, 11,
                    223, 141, 106, 156, 199, 223, 126, 202, 229, 118, 34, 22, 101, 215, 53,
                ],
            ),
            BytesN::from_array(
                &env,
                &[
                    132, 72, 129, 139, 180, 174, 69, 98, 132, 158, 148, 158, 23, 172, 22, 224, 190,
                    22, 104, 142, 21, 107, 92, 241, 94, 9, 140, 98, 124, 0, 86, 169,
                ],
            ),
        ],
    );

    let root = MerkleTree::branch_root(env.clone(), one, path, 0);
    let array_root = root.to_array();

    assert!(array_root.eq(&THREE_EXPECTED_ROOT), "Error in tree root");
}
